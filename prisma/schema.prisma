// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  username  String   @unique
  bio       String?
  password  String?
  isPublic  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  closetItems ClosetItem[]
}

model Item {
  id          String   @id @default(cuid())
  name        String
  description String
  history     String?
  imageUrl    String
  stylingUrl  String?
  embedCode   String?

  mainCategory String  // "ワーク" or "ミリタリー"
  subCategory  String  // Specific subcategory within main category
  category     String  // For backward compatibility, will be "mainCategory - subCategory"
  tags         String[]
  isStylingExample Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ClosetItem {
  id          String   @id @default(cuid())
  userId      String
  name        String
  description String?
  imageUrl    String
  mainCategory String  // "ワーク" or "ミリタリー"
  subCategory  String  // Specific subcategory within main category
  category     String  // For backward compatibility, will be "mainCategory - subCategory"
  tags         String[]
  favoritePoints String? // お気に入りポイント
  isPublic    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model InstagramPost {
  id        String   @id @default(cuid())
  postId    String   @unique
  imageUrl  String
  caption   String?
  url       String
  createdAt DateTime @default(now())
}
